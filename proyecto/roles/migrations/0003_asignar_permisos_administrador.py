# Generated by Django 5.2.5 on 2025-08-22 15:51

from django.db import migrations


def asignar_permisos_administrador(apps, schema_editor):
    """
    Asigna todos los permisos del sistema al rol administrador
    """
    Roles = apps.get_model('roles', 'Roles')
    Permission = apps.get_model('auth', 'Permission')
    
    try:
        admin_role = Roles.objects.get(name='administrador')
        all_permissions = Permission.objects.all()
        
        # Limpiar permisos existentes y asignar todos
        admin_role.permissions.clear()
        admin_role.permissions.add(*all_permissions)
        
        print(f"Se asignaron {all_permissions.count()} permisos al rol administrador.")
    except Roles.DoesNotExist:
        print("Error: No se pudo encontrar el rol administrador para asignar permisos.")
    except Exception as e:
        print(f"Error al asignar permisos: {e}")


def remover_permisos_administrador(apps, schema_editor):
    """
    Remueve todos los permisos del rol administrador (funci√≥n de reversa)
    """
    Roles = apps.get_model('roles', 'Roles')
    
    try:
        admin_role = Roles.objects.get(name='administrador')
        admin_role.permissions.clear()
        print("Permisos removidos del rol administrador.")
    except Roles.DoesNotExist:
        print("Error: No se pudo encontrar el rol administrador.")


class Migration(migrations.Migration):

    dependencies = [
        ('roles', '0002_crear_roles_predefinidos'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.RunPython(asignar_permisos_administrador, remover_permisos_administrador),
    ]
