# Generated by Django 5.2.5 on 2025-08-22 13:57

from django.db import migrations

def asignar_permisos_administrador(apps, schema_editor):
    """Asigna todos los permisos del sistema al grupo 'administrador'"""
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    
    try:
        # Obtener el grupo administrador
        grupo_admin = Group.objects.get(name='administrador')
        
        # Obtener todos los permisos disponibles en el sistema
        todos_los_permisos = Permission.objects.all()
        
        # Asignar todos los permisos al grupo administrador
        grupo_admin.permissions.set(todos_los_permisos)
        
        print(f"Se asignaron {todos_los_permisos.count()} permisos al grupo 'administrador'")
        
    except Group.DoesNotExist:
        print("El grupo 'administrador' no existe. Asegúrate de que las migraciones anteriores se hayan ejecutado correctamente.")

def remover_permisos_administrador(apps, schema_editor):
    """Remueve todos los permisos del grupo 'administrador'"""
    Group = apps.get_model('auth', 'Group')
    
    try:
        # Obtener el grupo administrador
        grupo_admin = Group.objects.get(name='administrador')
        
        # Remover todos los permisos del grupo
        grupo_admin.permissions.clear()
        
        print("Se removieron todos los permisos del grupo 'administrador'")
        
    except Group.DoesNotExist:
        print("El grupo 'administrador' no existe.")


class Migration(migrations.Migration):

    dependencies = [
        ('usuarios', '0008_auto_20250821_2355'),
        ('auth', '__latest__'),  # Asegurarse de que todas las tablas auth estén creadas
    ]

    operations = [
        migrations.RunPython(
            asignar_permisos_administrador,
            remover_permisos_administrador
        ),
    ]
